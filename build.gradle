plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.localcoupon'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:2025.0.0"
	}
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	compileOnly 'org.projectlombok:lombok'
//	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j:8.4.0'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	// Spring REST Docs 의존성
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	// Argon2 암호화 의존성
	implementation 'de.mkammerer:argon2-jvm:2.11'
	// Spring Seucirty
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'
	//FeignClient
	implementation "org.springframework.cloud:spring-cloud-starter-openfeign"
	//Redisson
	implementation 'org.redisson:redisson-spring-data-30:3.27.2'
	//Batch
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	//QueryDSL
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	// ✨ 추가!
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'

}

ext {
	snippetsDir = file('build/generated-snippets')
}

tasks.named('test') {
	useJUnitPlatform()
	outputs.dir snippetsDir
}


tasks.register('copyDocument', Copy) {
	dependsOn asciidoctor
	from asciidoctor.outputDir
	into 'src/main/resources/static/docs'
}

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', 'build/generated']
		}
	}
}


build {
	dependsOn copyDocument
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}

bootJar {
	dependsOn asciidoctor
	from("${asciidoctor.outputDir}") {
		into 'static/docs'
	}
}
