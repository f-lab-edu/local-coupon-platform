plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.localcoupon'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:2025.0.0"
	}
}


// Querydsl 설정부
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
	main.java.srcDirs += [ generated ]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
	delete file(generated)
}
def querydslVersion = "5.0.0"

dependencies {
	implementation libs.spring.boot.starter.web
	implementation libs.spring.boot.starter.data.jpa
	implementation libs.spring.boot.starter.data.redis
	implementation libs.spring.boot.starter.validation
	implementation libs.spring.boot.starter.aop
	implementation libs.spring.boot.starter.security
	implementation libs.spring.boot.starter.batch
	implementation libs.spring.boot.starter.mail
	implementation libs.spring.boot.starter.amqp
	implementation libs.actuator

	compileOnly libs.lombok
	runtimeOnly libs.mysql.connector
	annotationProcessor libs.lombok
	testImplementation libs.spring.boot.starter.test
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation libs.spring.restdocs.mockmvc
	implementation libs.argon2.jvm
	testImplementation libs.spring.security.test
	implementation libs.spring.cloud.openfeign
	implementation libs.redisson.spring
	implementation libs.querydsl.core
	implementation libs.querydsl.collections
	implementation libs.jakarta.persistence.api
	annotationProcessor libs.jakarta.persistence.api
	annotationProcessor libs.jakarta.annotation.api
	implementation "com.querydsl:querydsl-jpa:${querydslVersion}:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:${querydslVersion}:jakarta"

	implementation libs.zxing.core
	implementation libs.zxing.javase


	implementation libs.cloudinary.api
	implementation libs.prometheus
}

ext {
	snippetsDir = file('build/generated-snippets')
}

tasks.named('test') {
	useJUnitPlatform()
	outputs.dir snippetsDir
}


tasks.register('copyDocument', Copy) {
	dependsOn asciidoctor
	from asciidoctor.outputDir
	into 'src/main/resources/static/docs'
}



build {
	dependsOn copyDocument
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}

bootJar {
	dependsOn asciidoctor
	from("${asciidoctor.outputDir}") {
		into 'static/docs'
	}
}
