version: "3.8"

services:
  mysql-exporter:
    image: prom/mysqld-exporter
    container_name: mysql-exporter
    ports:
      - "9104:9104"
    environment:
      - DATA_SOURCE_NAME=exporter:exporterpassword@(mysql:3306)/
    depends_on:
      - mysql
    networks:
      - localnet
    volumes:
      - ./mysql-exporter/my.cnf:/etc/mysql/my.cnf:ro
    command: [ "--config.my-cnf=/etc/mysql/my.cnf" ]
    restart: always

  redis-exporter:
    image: oliver006/redis_exporter
    container_name: redis-exporter
    ports:
      - "9121:9121"
    networks:
      - localnet
    restart: always

  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    ports:
      - "9100:9100"
    networks:
      - localnet
    restart: always

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3002:3000"  # Grafana UI 포트
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD}   설정
    restart: always
    networks:
      - localnet

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"  # Prometheus UI 포트
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml  # Prometheus 설정 파일
    restart: always
    networks:
      - localnet

  mysql:
    image: mysql:9.3.0
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - localnet

  # Redis Master
  redis-master:
    image: redis:7.2
    container_name: redis-master
    ports:
      - "6379:6379"
    networks:
      - redis-net
    command: [ "redis-server", "--appendonly", "yes" ]

  redis-slave:
    image: redis:7.2
    container_name: redis-slave
    ports:
      - "6380:6379"
    networks:
      - redis-net
    depends_on:
      - redis-master
    command: [ "redis-server", "--slaveof", "redis-master", "--appendonly", "yes" ]

  sentinel1:
    image: redis:7.2
    container_name: sentinel1
    ports:
      - "26379:26379"
    networks:
      - redis-net
    command: [ "redis-sentinel", "/etc/redis/sentinel.conf" ]
    volumes:
      - ./sentinel.conf:/etc/redis/sentinel.conf

  sentinel2:
    image: redis:7.2
    container_name: sentinel2
    ports:
      - "26380:26379"
    networks:
      - redis-net
    command: [ "redis-sentinel", "/etc/redis/sentinel.conf" ]
    volumes:
      - ./sentinel.conf:/etc/redis/sentinel.conf

  sentinel3:
    image: redis:7.2
    container_name: sentinel3
    ports:
      - "26381:26379"
    networks:
      - redis-net
    command: [ "redis-sentinel", "/etc/redis/sentinel.conf" ]
    volumes:
      - ./sentinel.conf:/etc/redis/sentinel.conf

volumes:
  mysql_data:
    external: true
    name: db065359ee986ecdbbdff71b577aea25372d9f51abab471c6c495c231d3a0cdd
  redis_data:
    external: true
    name: 4fa48ee4ee47ebed00c7ef330fc816ce0afe73141783eecd2e732c4c2f081ac6

networks:
  localnet:
    driver: bridge
  redis-net:
    driver: bridge
